// Top-level build file where you can add configuration options common to all sub-projects/modules.

    apply from: this.rootProject.file('config.gradle')
    apply from: this.rootProject.file('build.checkARouter.gradle')
    apply plugin: 'com.alibaba.arouter'

    buildscript {

        println("---------- 1. ext.isBuildModule = ${ext.isBuildModule}")

        ext.kotlin_version = "1.7.20"
        repositories {
            maven {
                url 'https://www.jitpack.io'
            }
            maven {
                allowInsecureProtocol = true
                url 'https://maven.aliyun.com/repository/public'
            }
            maven {
                allowInsecureProtocol = true
                url 'https://maven.aliyun.com/repository/google'
            }
            maven {
                allowInsecureProtocol = true
                url 'https://maven.aliyun.com/repository/central'
            }
            maven {
                allowInsecureProtocol = true
                url 'https://repo1.maven.org/maven2/'
            }
            maven {
                allowInsecureProtocol = true
                url "https://s01.oss.sonatype.org/content/groups/public"
            }
            google()
            mavenCentral()
        }
        dependencies {
            classpath "com.android.tools.build:gradle:7.1.2"
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
            classpath "com.alibaba:arouter-register:1.0.2"

            // NOTE: Do not place your application dependencies here; they belong
            // in the individual module build.gradle files
        }
        configurations.all {
            it.resolutionStrategy.cacheDynamicVersionsFor(5, 'minutes')
            it.resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
        }
    }

    allprojects {
        repositories {
            maven {
                url 'https://www.jitpack.io'
            }
            maven {
                allowInsecureProtocol = true
                url 'https://maven.aliyun.com/repository/public'
            }
            maven {
                allowInsecureProtocol = true
                url 'https://maven.aliyun.com/repository/google'
            }
            maven {
                allowInsecureProtocol = true
                url 'https://maven.aliyun.com/repository/central'
            }
            maven {
                allowInsecureProtocol = true
                url 'https://repo1.maven.org/maven2/'
            }
            maven {
                allowInsecureProtocol = true
                url "https://s01.oss.sonatype.org/content/groups/public"
            }
            google()
            mavenCentral()
        }
    }

    task clean (type: Delete) {
        delete rootProject.buildDir
    }

project.tasks.whenTaskAdded { Task task ->
    println"---------- whenTaskAdded task ${task.name} add"
    if (task.name == "assembleDevDebug") {
        task.dependsOn(checkARouterDuplicatedJavaFiles)
    } else if (task.name == "transformClassesWithCom.alibaba.arouterForDevDebug") {
        checkARouterDuplicatedJavaFiles.dependsOn(task)
    }
}